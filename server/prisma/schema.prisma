generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = "file:../data/budget.sqlite"
}

model Transaction {
  id        String  @id @default(uuid())
  bank      String
  accountId String
  account   Account @relation(fields: [accountId], references: [id])

  accountIban   String?
  dateOperation DateTime
  dateValeur    DateTime?
  label         String
  details       String?
  debit         Float     @default(0)
  credit        Float     @default(0)
  amount        Float
  yearMonth     String
  sourceFile    String
  categoryId    String?
  fingerprint   String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  typeOperation String?
  entityId      String?
  entity        Entity?   @relation(fields: [entityId], references: [id])
}

model Category {
  id               String     @id @default(uuid())
  name             String     @unique
  color            String?
  icon             String?
  description      String?
  parentCategoryId String?
  parent           Category?  @relation("SubCategories", fields: [parentCategoryId], references: [id])
  children         Category[] @relation("SubCategories")

  // Relations externes
  entities Entity[]
}

model Tag {
  id       String      @id @default(uuid())
  name     String      @unique
  color    String?
  entities EntityTag[]
}

model Entity {
  id         String     @id @default(uuid())
  name       String
  accountId  String
  account    Account    @relation(fields: [accountId], references: [id])

  aliasOfId  String?
  aliasOf    Entity?    @relation("AliasRelation", fields: [aliasOfId], references: [id])
  aliases    Entity[]   @relation("AliasRelation")

  categoryId String?
  category   Category?  @relation(fields: [categoryId], references: [id])
  tags       EntityTag[]

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  transactions Transaction[]
}

model EntityTag {
  entityId String
  tagId    String
  entity   Entity @relation(fields: [entityId], references: [id])
  tag      Tag    @relation(fields: [tagId], references: [id])

  @@id([entityId, tagId])
}

model Account {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  bankCode    String?
  color       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  transactions Transaction[]
  entities     Entity[]
}
